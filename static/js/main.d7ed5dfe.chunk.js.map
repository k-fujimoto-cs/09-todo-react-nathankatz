{"version":3,"sources":["Todo.js","NewTodo.js","App.js","index.js"],"names":["Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","completed","completeTodo","bind","assertThisInitialized","event","todoId","target","parentNode","id","self","completeSendRequest","XMLHttpRequest","onreadystatechange","readyState","status","setState","console","log","responseText","open","setRequestHeader","send","JSON","stringify","className","react_default","a","createElement","onClick","text","deleteTodo","Component","NewTodo","onSubmit","addTodo","type","placeholder","value","input","onChange","App","todos","sortTodo","preventDefault","data","loadTodos","toConsumableArray","concat","parse","deleteSendRequest","remainingTodos","filter","todo","sort","b","localeCompare","_this2","src_NewTodo_0","updateTodo","map","src_Todo_0","key","xhttp","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d7ed5dfe.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Todo.css';\n\nclass Todo extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          completed: this.props.completed\n      }\n      this.completeTodo = this.completeTodo.bind(this);\n  }\n  completeTodo(event) {\n      var apiKey = \"ce717a44505a015565790b36630db8c11e097e4a8ab2af890880f9a502b8758e\";\n      var todoId = event.target.parentNode.id;\n      var self= this;\n      var data = {\n          completed: true\n      };\n      var completeSendRequest = new XMLHttpRequest();\n\n      completeSendRequest.onreadystatechange = function () {\n          // Wait for readyState = 4 & 200 response\n          if (this.readyState == 4 && this.status == 200) {\n              // parse JSON response\n\n              self.setState({\n                  completed: true\n              });\n\n          } else if (this.readyState == 4) {\n              // this.status !== 200, error from server\n              console.log(this.responseText);\n\n          }\n      };\n      //use put\n      completeSendRequest.open(\"PUT\", \"https://api.kraigh.net/todos/\" + todoId, true);\n      completeSendRequest.setRequestHeader(\"Content-type\", \"application/json\");\n      completeSendRequest.setRequestHeader(\"x-api-key\", apiKey);\n      completeSendRequest.send(JSON.stringify(data));\n\n        // self.setState({todos: this.props.todos});\n  }\n\n\n\n  //\n  render() {\n    var className = \"todo\";\n  if (this.state.completed) {\n    className = \"todo completed\";\n  }\n    return (\n      <div id={this.props.id} className={className}>\n       <button className=\"check\" onClick={this.completeTodo}></button>\n       <p>{this.props.text}</p>\n       <button className=\"delete\" onClick={this.props.deleteTodo}>-</button>\n     </div>\n    );\n  }\n}\n\n\n\nexport default Todo;\n","import React, { Component } from 'react';\nimport './NewTodo.css';\n\nclass NewTodo extends Component {\n  render() {\n    return (\n      <div>\n          <form id=\"new-entry\" onSubmit={this.props.addTodo}>\n              <input type=\"text\" id=\"newText\" placeholder=\"New ToDo...\" value={this.props.input}  onChange={this.props.onChange}/>\n              <button type=\"submit\" onSubmit={this.props.addTodo} id=\"submit\">ADD</button >\n          </form>\n\n\n\n      </div>\n\n    );\n  }\n}\n\nexport default NewTodo;\n","import React, {\n    Component\n} from 'react';\nimport './App.css';\nimport Todo from './Todo';\nimport NewTodo from './NewTodo';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            todos: [],\n            input: ''\n        }\n        this.addTodo = this.addTodo.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.deleteTodo = this.deleteTodo.bind(this);\n        // this.completeTodo = this.completeTodo.bind(this);\n        this.sortTodo = this.sortTodo.bind(this);\n    }\n\n    addTodo(event) {\n      var apiKey = \"ce717a44505a015565790b36630db8c11e097e4a8ab2af890880f9a502b8758e\";\n      var self = this;\n        event.preventDefault();\n        var data = {\n          text: this.state.input\n        }\n        var loadTodos = new XMLHttpRequest();\n\n    loadTodos.onreadystatechange = function () {\n        // Wait for readyState = 4 & 200 response\n        if (this.readyState == 4 && this.status == 200) {\n            // parse JSON response\n            self.setState({\n                todos: [...self.state.todos, JSON.parse(this.responseText)]\n            });\n        } else if (this.readyState == 4) {\n\n            // this.status !== 200, error from server\n            console.log(this.responseText);\n\n        }\n    };\n    loadTodos.open(\"POST\", \"https://api.kraigh.net/todos\", true);\n    loadTodos.setRequestHeader(\"Content-type\", \"application/json\");\n    loadTodos.setRequestHeader(\"x-api-key\", apiKey);\n    loadTodos.send(JSON.stringify(data));\n\n        this.setState({\n            input: ''\n        });\n\n    }\n\n\n    onChange(event) {\n\n\n        this.setState({\n            input: event.target.value\n        });\n    }\n    deleteTodo(event) {\n        var apiKey = \"ce717a44505a015565790b36630db8c11e097e4a8ab2af890880f9a502b8758e\";\n        var todoId = event.target.parentNode.id;\n        var self = this;\n        var deleteSendRequest = new XMLHttpRequest();\n        deleteSendRequest.onreadystatechange = function () {\n            // Wait for readyState = 4 & 200 response\n            if (this.readyState == 4 && this.status == 200) {\n                // parse JSON response\n                // event.target.parentNode.remove();\n                const remainingTodos = self.state.todos.filter((todo) => {\n                    // Looping through all todos, if the id of the current todo DOES NOT equal the id of the todo we want to delete, keep it\n                    if (todo.id !== todoId) {\n                        return todo;\n                    }\n                });\n\n                self.setState({\n                    todos: remainingTodos\n                });\n            } else if (this.readyState == 4) {\n\n                // this.status !== 200, error from server\n                console.log(this.responseText);\n\n            }\n        };\n        deleteSendRequest.open(\"DELETE\", \"https://api.kraigh.net/todos/\" + todoId, true);\n        deleteSendRequest.setRequestHeader(\"Content-type\", \"application/json\");\n        deleteSendRequest.setRequestHeader(\"x-api-key\", apiKey);\n        //send complete changes\n        deleteSendRequest.send();\n\n\n    }\n\n    sortTodo(event) {\n      console.log('hi');\n      var todos = this.state.todos;\n\n      todos.sort(function (a, b) {\n        return a.text.localeCompare(b.text);\n      })\n      this.setState({todos: todos});\n    }\n\n\n    render() {\n        return ( <\n            section id = \"todos\" >\n            <NewTodo addTodo = {this.addTodo}\n            onChange = {this.onChange}\n            updateTodo = {this.updateTodo}\n            input = {this.state.input}/>\n            <button onClick = {this.sortTodo} id=\"submit\"> Sort </button>\n            {this.state.todos.map((todo) =>\n                    <Todo key = {todo.id}\n                    id = {\n                      todo.id\n                    }\n                    completed = {\n                        todo.completed\n                    }\n                    text = {\n                        todo.text\n                    }\n                    deleteTodo = {\n                        this.deleteTodo\n                    }\n                    />\n                )\n            } <\n            /section>\n        );\n    }\n    componentDidMount() {\n      const self = this;\n        var apiKey = \"ce717a44505a015565790b36630db8c11e097e4a8ab2af890880f9a502b8758e\";\n\n        var xhttp = new XMLHttpRequest();\n\n        xhttp.onreadystatechange = function () {\n            if (xhttp.readyState == 4 && xhttp.status == 200) {\n                //\n                var todos = JSON.parse(xhttp.responseText);\n                self.setState({todos: todos});\n                console.log(todos);\n            }\n        };\n\n        xhttp.open(\"GET\", \"https://api.kraigh.net/todos\", true);\n        xhttp.setRequestHeader(\"x-api-key\", apiKey);\n        xhttp.send();\n        //display todos\n\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}